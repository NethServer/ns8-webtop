#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import os
import sys
import agent
import subprocess

rdb = agent.redis_connect() # full read-only access on every key
modules=[]
accepted_timezone_list = []
list_of_timezone_widget = []
ejabberd = []
phonebook = []

# we query about all mail server to use it inside the user interface
for key in agent.list_service_providers(rdb,'imap','tcp'):
    mail = key['module_id']
    get_retval = agent.tasks.run(f"module/{mail}",'list-domains')
    for kd in get_retval['output']:
        if kd.get('addusers') == True:
            obj = {
                "name": key['module_id'],
                "label": f"{kd['domain']} ({key['mail_hostname']})",
                "value": key['module_id']+','+kd['domain'],
            }
            modules.append(obj)
# we query about all known timezone and we build a widget
accepted_timezone_list = subprocess.check_output(['podman', 'run', '--log-driver=none', '--replace', '--name', 'list-timezones', '--rm', os.environ["WEBTOP_WEBAPP_IMAGE"], 'java', '-classpath', '/usr/share/webtop/', 'ListTimeZones'], text=True).splitlines()

for value in accepted_timezone_list:
    list_of_timezone_widget.append({
        "name": value,
        "label": value,
        "value": value,
    })

# Retrieve all ejabberd servers among the cluster
for key in agent.list_service_providers(rdb,'xmpp','tcp'):
    obj = {
        "name": key['module_id'],
        "label": f"{key['ejabberd_hostname']} (node: {key['node']})",
        "value": key['module_id']+','+key['ejabberd_hostname']
    }
    ejabberd.append(obj)

# Retrive all phonebook service providers (NethVoice instances)
for key in agent.list_service_providers(rdb,'phonebook','tcp'):
    response = agent.tasks.run(
        agent_id=f"module/{key['module_id']}",
        action='get-phonebook-credentials',
        data={'instance': key['module_id']})
    if response['exit_code'] == 0:
        phonebook.append({key['module_id'] : response['output']})
    else:
        print(f"Failed to get phonebook credentials for {key['module_id']}: {response['output']}", file=sys.stderr)

# determine the amount of RAM available on the system
try:
    with open('/proc/meminfo', 'r') as f:
        for line in f:
            if line.startswith('MemTotal:'):
                ram_mb = int(line.split()[1]) // 1024  # Convert kB to MB
except Exception:
    ram_mb = 4096

config={
        "mail_modules_id": modules,
        "ejabberd_modules_id": ejabberd,
        "phonebook_modules_id": phonebook,
        "accepted_timezone_list": list_of_timezone_widget,
        "ram_mb": ram_mb,
        }

json.dump(config, fp=sys.stdout)
